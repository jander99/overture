name: commit-message-template
description: Validates and formats commit messages according to conventional commits

# Event trigger
event: tool-call

# Filter to only trigger on git commit operations
filter:
  tool: Bash
  pattern: "git\\s+commit.*"

# Command to execute
command: |
  #!/bin/bash

  echo "Validating commit message format..."

  # This is a pre-commit hook that would validate commit messages
  # In a real implementation, this would:
  # 1. Check commit message format (conventional commits)
  # 2. Ensure proper structure: type(scope): description
  # 3. Validate message length
  # 4. Check for issue references

  # Example validation (placeholder)
  # The actual implementation would hook into git's commit-msg hook

  cat << 'EOF'
Commit Message Guidelines:

Format: <type>(<scope>): <description>

Types:
  - feat: New feature
  - fix: Bug fix
  - docs: Documentation changes
  - style: Code style changes (formatting)
  - refactor: Code refactoring
  - test: Adding or updating tests
  - chore: Maintenance tasks

Example:
  feat(auth): add OAuth2 authentication
  fix(api): resolve race condition in user creation
  docs(readme): update installation instructions

EOF

# Environment variables
env: {}

# Dependencies
dependencies: []
